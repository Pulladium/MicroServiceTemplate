---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.dekorate.io/vcs-url: <<unknown>>
    app.dekorate.io/commit-id: 9ad442de32443c7e120acba74bbba0822982d938
  labels:
    app.kubernetes.io/name: gateway-react
    app.kubernetes.io/version: 1.0-SNAPSHOT
  name: gateway-react
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/version: 1.0-SNAPSHOT
      app.kubernetes.io/name: gateway-react
  template:
    metadata:
      annotations:
        app.dekorate.io/vcs-url: <<unknown>>
        app.dekorate.io/commit-id: 9ad442de32443c7e120acba74bbba0822982d938
      labels:
        app.kubernetes.io/version: 1.0-SNAPSHOT
        app.kubernetes.io/name: gateway-react
    spec:
      containers:
        - env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SPRING_CONFIG_IMPORT
              value: configtree:/etc/config/
          image: gateway-react:1.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/liveness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: gateway-react
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/readiness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          volumeMounts:
            - mountPath: /etc/config/
              name: gateway-config-volume
              readOnly: false
              subPath: ""
      volumes:
        - configMap:
            defaultMode: 420
            name: gateway-config
            optional: true
          name: gateway-config-volume
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: nginx
  # annotations:
  #   ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: k8s.io/ingress-nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    #    nginx.ingress.kubernetes.io/rewrite-target: /$2
    app.dekorate.io/vcs-url: <<unknown>>
    app.dekorate.io/commit-id: 9ad442de32443c7e120acba74bbba0822982d938
  labels:
    #    app.kubernetes.io/part-of: default
    app.kubernetes.io/name: gateway-react
    app.kubernetes.io/version: 1.0-SNAPSHOT
  name: gateway-react

spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - pathType: Prefix
            #            path: /api(/|$)(.*)
            path: /
            backend:
              service:
                name: gateway-react
                port:
                  number: 8080
#          - pathType: Prefix
#            path: /bar(/|$)(.*)
#            backend:
#              service:
#                name: bar-service
#                port:
#                  number: 8080
#spec:
#  rules:
#    - host: ""
#      http:
#        paths:
#          - backend:
#              service:
#                name: gateway-react
#                port:
#                  number: 8080
#            path: /api(/|$)(.*)
#            pathType: Prefix
#     kubectl get all -n ingress-nginx
#   kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
#  kubectl wait --namespace ingress-nginx   --for=condition=ready pod   --selector=app.kubernetes.io/component=controller   --timeout=90s
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.dekorate.io/vcs-url: <<unknown>>
    app.dekorate.io/commit-id: 9ad442de32443c7e120acba74bbba0822982d938
  labels:
    app.kubernetes.io/name: gateway-react
    app.kubernetes.io/version: 1.0-SNAPSHOT
  name: gateway-react
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
  #      targetPort: 8080
  selector:
    app.kubernetes.io/name: gateway-react
    app.kubernetes.io/version: 1.0-SNAPSHOT
#  type: NodePort
